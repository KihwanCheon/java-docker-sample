<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>example.docker.java</groupId>
        <artifactId>samples</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>dmp</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <outputDirectory>target/lib</outputDirectory>
                    <overWriteIfNewer>true</overWriteIfNewer>
                    <includeScope>runtime</includeScope>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.34.1</version>
                <configuration>
                    <images>
                        <image>
                            <name>${prop}-dmp-lib</name>
                            <build>
                                <from>adoptopenjdk/openjdk11:alpine</from>
                                <env>
                                    <TZ>Asia/Seoul</TZ>
                                    <vm_opt>-Dvm_opt=a1</vm_opt>
                                    <app_param1>${prop}</app_param1>
                                </env>
                                <entryPoint>
                                    <!-- gc log for https://github.com/chewiebug/GCViewer/releases 1.36 -->
                                    <!-- jmx https://stackoverflow.com/questions/31257968/how-to-access-jmx-interface-in-docker-from-outside -->
                                    <!-- -Djava.rmi.server.hostname=hostip for -net host  -->
                                    <shell>java -cp "app-lib/*" \
                                        -Duser.timezone=Asia/Seoul \
                                        -Djava.security.egd=file:/dev/./urandom \
                                        -Xlog:gc*:file=log/gc.log:tags,time,uptime,level:filecount=5,filesize=20M \
                                        -XX:+HeapDumpOnOutOfMemoryError \
                                        -XX:HeapDumpPath=log/oome.hprof \
                                        -Dcom.sun.management.jmxremote \
                                        -Dcom.sun.management.jmxremote.authenticate=false \
                                        -Dcom.sun.management.jmxremote.port=12091 \
                                        -Dcom.sun.management.jmxremote.rmi.port=12091 \
                                        -Djava.rmi.server.hostname=0.0.0.0 \
                                        -Dcom.sun.management.jmxremote.local.only=false \
                                        -Dcom.sun.management.jmxremote.ssl=false \
                                        $vm_opt \
                                        example.docker.java.dmp.App $app_param1 $app_param2
                                    </shell>
                                </entryPoint>
                                <assembly>
                                    <inline>
                                        <id>libs</id>
                                        <files>
                                            <file>
                                                <source>${build.directory}/${build.finalName}.jar</source>
                                                <outputDirectory>app-lib</outputDirectory>
                                            </file>
                                        </files>
                                        <fileSet>
                                            <directory>${build.directory}/lib</directory>
                                            <outputDirectory>app-lib</outputDirectory>
                                        </fileSet>
                                    </inline>
                                    <targetDir>/</targetDir>
                                </assembly>
                            </build>
                            <run>

                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
